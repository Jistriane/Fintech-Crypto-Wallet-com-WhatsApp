# Imagem base para todos os serviços
FROM node:18-alpine AS base

# Instalação de dependências necessárias
RUN apk add --no-cache python3 make g++ git

# Diretório de trabalho
WORKDIR /app

# Arquivos de configuração do projeto
COPY package.json yarn.lock tsconfig.json ./
COPY packages/common/package.json ./packages/common/

# Instalação de dependências
RUN yarn install --frozen-lockfile

# Build do pacote comum
COPY packages/common ./packages/common
RUN cd packages/common && yarn build

# Configuração de produção
FROM node:18-alpine AS production

WORKDIR /app

# Copia apenas os arquivos necessários
COPY --from=base /app/node_modules ./node_modules
COPY --from=base /app/packages ./packages

# Configurações de ambiente
ENV NODE_ENV=production

# Healthcheck
HEALTHCHECK --interval=30s --timeout=3s --start-period=30s --retries=3 \
  CMD wget --no-verbose --tries=1 --spider http://localhost:3000/health || exit 1

# Exposição da porta
EXPOSE 3000

# Comando padrão
CMD ["node", "dist/index.js"]
