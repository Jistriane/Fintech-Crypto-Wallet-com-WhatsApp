# Estágio de build
FROM node:18-alpine AS builder

# Instalação de dependências do sistema
RUN apk add --no-cache python3 make g++ git

# Diretório de trabalho
WORKDIR /app

# Arquivos de configuração do projeto
COPY package*.json ./
COPY packages/common/package*.json ./packages/common/
COPY services/*/package*.json ./services/

# Instalação de dependências
RUN npm install --legacy-peer-deps

# Build do pacote comum
COPY packages/common ./packages/common
RUN cd packages/common && npm run build

# Estágio de produção
FROM node:18-alpine

WORKDIR /app

# Copia os artefatos de build
COPY --from=builder /app/packages/common/dist ./packages/common/dist
COPY --from=builder /app/packages/common/node_modules ./packages/common/node_modules
COPY --from=builder /app/node_modules ./node_modules

# Comando para iniciar o serviço será definido nos Dockerfiles específicos